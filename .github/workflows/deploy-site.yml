# Builds and deploys the site if the build was successful
name: Build & Deploy Site

# Conditions necessary to trigger a build
on:
  push:
    # Ignore pushes on all branches by default
    # Branches that should trigger a build must be explicitly excluded from the ignore using '!BRANCH_NAME'
    #
    # Excluding the branch that is pushed by this action will lead to an infinite loop
    branches-ignore:
      - '**'
      - '!master'

    # Only build if a file in one of these paths has been changed
    paths:
      - 'src/main/asciidoc/**'
      - 'src/main/template/**'
      - '.asf.yaml.publish'

jobs:
  build:
    name: Build & Deploy Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build Site
        run: mvn clean compile

      # Determines the short sha of the commit that triggered the build
      - name: Determine Short SHA
        if: success()
        id: short-sha
        run: |
          short_sha=$(git rev-parse --short=10 $GITHUB_SHA)
          echo "::set-output name=short_sha::$short_sha"
        shell: 'bash'

      # Determines the author data of the HEAD commit
      # Sets up the author data to be used for the site deploy commit
      - name: Determine HEAD Commit Author Data
        if: success()
        id: author-data
        run: |
          echo "Reading author data"
          author_name=$(git log -1 --format='%aN' HEAD)
          author_email=$(git log -1 --format='%aE' HEAD)

          echo "Setting up author data to use for deploy commit"
          git config user.name $author_name
          git config user.email $author_email
        shell: 'bash'

      # Publishes the site build results to a separate orphan branch
      #
      # Creates and checks out a new orphan branch
      # Creates a single commit containing only the site build artifacts and site configuration files located in the root directory
      # The commit is created with the author data set up in the previous step
      # Force-pushes the created branch, overwriting the previously published site build
      - name: Publish site branch
        if: success()
        run: |
          branch_name="publish"

          echo "Creating orphan branch"
          git checkout --orphan $branch_name
          echo

          echo "Dropping content other than site data"
          git reset
          rm .gitignore
          git add .asf.yaml.publish target/site
          git clean -df
          git mv target/site/* ./
          git mv .asf.yaml.publish .asf.yaml
          echo

          echo "Committing changes"
          git commit -m "Auto-deploy site for commit ${{ steps.short-sha.outputs.short_sha }}"
          echo

          echo "Pushing site branch"
          git push -f origin $branch_name
        shell: 'bash'
